(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{880:function(t,e,r){"use strict";r.r(e);var a=r(113),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_6-2-listview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-listview"}},[t._v("#")]),t._v(" 6.2 ListView")]),t._v(" "),r("br"),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"listview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#listview"}},[t._v("#")]),t._v(" ListView")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ListView-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListView"),r("OutboundLink")],1),t._v("（默认构造函数）有一个 "),r("code",[t._v("children")]),t._v(" 参数，它接受一个 Widget 列表（List）。这种方式适合"),r("strong",[t._v("只有少量的子组件")]),t._v("的情况，因为这种方式需要将所有 "),r("code",[t._v("children")]),t._v(" 都提前创建好（这需要做大量工作），而不是等到子 widget 真正显示的时候再创建，也就是说通过默认构造函数构建的 ListView 没有应用基于 Sliver 的懒加载模型。实际上通过此方式创建的 "),r("code",[t._v("ListView")]),t._v(" 和使用 "),r("code",[t._v("SingleChildScrollView")]),t._v(" + "),r("code",[t._v("Column")]),t._v(" 的方式没有本质的区别。")]),t._v(" "),r("br"),t._v(" "),r("p",[r("code",[t._v("可滚动widget公共参数")]),t._v("：")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/foundation/Key-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("key")]),t._v("，当前组件的唯一表示符；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/painting/Axis-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Axis"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("scrollDirection")]),t._v(": Axis.vertical，滚动方向，默认是垂直；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("reverse")]),t._v(": false，是否按照阅读方向相反的方向滑动；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"4"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ScrollController-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ScrollController"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("controller")]),t._v("，控制器对象，主要作用是控制滚动位置与监听滚动事件；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"5"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("primary")]),t._v("，是否使用 widget 树中默认的 "),r("code",[t._v("PrimaryScrollController")]),t._v("。当滑动方向为垂直方向并且 controller 没有指定时，primary 默认为 true；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"6"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ScrollPhysics-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ScrollPhysics"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("physics")]),t._v("，此属性接受一个 "),r("code",[t._v("ScrollPhysics")]),t._v(" 类型的对象，决定可滚动组件如何响应用户操作；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"7"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/painting/EdgeInsetsGeometry-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("EdgeInsetsGeometry"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("padding")]),t._v("，填充边距；")])])])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("code",[t._v("ListView各个构造函数（ListView有多个构造函数）的共同参数")]),t._v("：")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/double-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("double"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("itemExtent")]),t._v("，强制 ListView 的 children 的长度为 itemExtent 的值。")])])])]),t._v(" "),r("p",[t._v("指定 itemExtent 的值比让子元素决定自身长度在绘制时"),r("strong",[t._v("更高效")]),t._v("，特别是在滚动位置频繁变化的状态下，因为设置 itemExtent 可以让滚动系统提前知道列表的长度。")]),t._v(" "),r("ul",[r("li",[r("ol",{attrs:{start:"2"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("shrinkWrap")]),t._v(": false，是否根据 子widget 的总长度设置 "),r("code",[t._v("ListView")]),t._v(" 的总长度，默认 false；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("addAutomaticKeepAlives")]),t._v(": true，是否将列表项包裹在 "),r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/AutomaticKeepAlive-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AutomaticKeepAlive"),r("OutboundLink")],1),t._v(" 中；")])])])]),t._v(" "),r("p",[t._v("在懒加载时，如果设置了包裹那么在此列表项滑出屏幕外时不会被 GC。如果此列表项需要自己维护 KeepAlive 状态，那么此参数需为 false。")]),t._v(" "),r("ul",[r("li",[r("ol",{attrs:{start:"4"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("addRepaintBoundaries")]),t._v(": true，是否将列表包裹在 "),r("a",{attrs:{href:""}},[t._v("RepaintBoundary")]),t._v(" 中；")])])])]),t._v(" "),r("p",[t._v("当选择将列表项包裹在 "),r("code",[t._v("RepaintBoundary")]),t._v(" 时，在滚动过程中可以避免重绘，如果此列表项需要自己维护 KeepAlive 状态，那么此参数需为 false。")]),t._v(" "),r("ul",[r("li",[r("ol",{attrs:{start:"5"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/double-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("double"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("cacheExtent")]),t._v("，设置预加载的区域，范围在窗口可见范围之前与之后。如果设置为 0，表示关闭预加载；")])])])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("code",[t._v("子widget参数")]),t._v("：")]),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/List-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("List"),r("OutboundLink")],1),t._v("<"),r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/Widget-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Widget"),r("OutboundLink")],1),t._v("> "),r("strong",[t._v("children")]),t._v(": const []，子节点列表；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("addSemanticIndexes")]),t._v(": true，是否给子元素添加索引，默认为 true；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("semanticChildCount")]),t._v("，提供语义信息的子节点的数量；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"4"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/gestures/DragStartBehavior-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DragStartBehavior"),r("OutboundLink")],1),t._v(" dragStartBehavior: DragStartBehavior.start")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"5"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ScrollViewKeyboardDismissBehavior-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ScrollViewKeyboardDismissBehavior"),r("OutboundLink")],1),t._v(" keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.manual")])])])]),t._v(" "),r("br"),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"listview-builder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#listview-builder"}},[t._v("#")]),t._v(" ListView.builder")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ListView/ListView.builder.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListView.builder"),r("OutboundLink")],1),t._v(" 适合列表项比较多（或者无限）的情况，因为只有当子组件真正显示的时候才会被创建，也就说通过该构造函数创建的 "),r("code",[t._v("ListView")]),t._v(" 是支持基于 Sliver 的懒加载模型的。")]),t._v(" "),r("br"),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[t._v("@required "),r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/IndexedWidgetBuilder.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IndexedWidgetBuilder"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("itemBuilder")]),t._v("，列表项的构建器，类型为 IndexedWidgetBuilder，返回值为一个 widget。当列表滚动到具体的 index 位置时，会调用该构建器构建列表项；")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int"),r("OutboundLink")],1),t._v(" -- "),r("strong",[t._v("itemCount")]),t._v("，列表项的数量，如果为null，则为无限列表；")])])])]),t._v(" "),r("br"),t._v(" "),r("div",{staticClass:"language-dart extra-class"},[r("pre",{pre:!0,attrs:{class:"language-dart"}},[r("code",[t._v("ListView"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    itemCount"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    itemExtent"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制每一个子项高度为50")]),t._v("\n    itemBuilder"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BuildContext context"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int index"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$index'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),r("br"),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"listview-separated"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#listview-separated"}},[t._v("#")]),t._v(" ListView.separated")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/ListView/ListView.separated.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListView.separated"),r("OutboundLink")],1),t._v(" 可以在生成的列表项之间添加一个分割组件，它比 "),r("code",[t._v("ListView.builder")]),t._v(" 多了一个"),r("code",[t._v("separatorBuilder")]),t._v("参数，该参数是一个分割组件生成器。")]),t._v(" "),r("br"),t._v(" "),r("ul",[r("li",[r("ol",[r("li",[t._v("@required "),r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/IndexedWidgetBuilder.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IndexedWidgetBuilder"),r("OutboundLink")],1),t._v(" separatorBuilder")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("@required "),r("a",{attrs:{href:"https://api.flutter.dev/flutter/widgets/IndexedWidgetBuilder.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IndexedWidgetBuilder"),r("OutboundLink")],1),t._v(" itemBuilder")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"3"}},[r("li",[t._v("@required "),r("a",{attrs:{href:"https://api.flutter.dev/flutter/dart-core/int-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int"),r("OutboundLink")],1),t._v(" itemCount")])])])]),t._v(" "),r("br"),t._v(" "),r("div",{staticClass:"language-dart extra-class"},[r("pre",{pre:!0,attrs:{class:"language-dart"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OtherContainer")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatelessWidget")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token metadata symbol"}},[t._v("@override")]),t._v("\n    Widget "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BuildContext context"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Widget d1"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Divider")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Colors"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blue"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Widget d2"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Divider")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Colors"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("green"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scaffold")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            appBar"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("AppBar")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                title"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'其它基本部件'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                centerTitle"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            body"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ListView"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("separated")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                itemCount"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                itemBuilder"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BuildContext context"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int index"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Text")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$index'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分割器构造器")]),t._v("\n                separatorBuilder"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BuildContext context"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int index"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 奇数行添加一条蓝色下划线，偶数行添加一条绿色下划线")]),t._v("\n                    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" index "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" d1 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" d2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n                "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);